CREATE DATABASE IF NOT EXISTS beyond_db;
USE beyond_db;
-- SET time_zone = 'America/São_Paulo';

CREATE TABLE IF NOT EXISTS TB_ENDERECO (
  ID_ENDERECO INT PRIMARY KEY AUTO_INCREMENT,
  PAIS VARCHAR(45),
  ESTADO VARCHAR(45),
  CIDADE VARCHAR(45),
  RUA VARCHAR(255),
  NUMERO_RUA INT,
  COMPLEMENTO VARCHAR(45),
  CEP CHAR(10)
);

CREATE TABLE IF NOT EXISTS TB_EMPRESA (
  ID_EMPRESA INT PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(45),
  CNPJ CHAR(15),
  CHAVE_ATIVACAO CHAR(15),
  EMAIL VARCHAR(45),
  TEL CHAR(14),
  FRANQUIA VARCHAR(45),
  NOTIFICACAO_STATUS TINYINT,
  ID_CANAL_SLACK VARCHAR(11)
);

CREATE TABLE IF NOT EXISTS TB_ENDERECO_EMPRESA (
  ID_END_EMPRESA INT PRIMARY KEY AUTO_INCREMENT,
  FK_ENDERECO INT,
  FK_EMPRESA INT,
  TIPO VARCHAR(45),
  FOREIGN KEY (FK_ENDERECO) REFERENCES TB_ENDERECO(ID_ENDERECO),
  FOREIGN KEY (FK_EMPRESA) REFERENCES TB_EMPRESA(ID_EMPRESA)
);

CREATE TABLE IF NOT EXISTS TB_PERMISSAO (
  ID_PERMISSAO INT PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS TB_FUNCIONARIO (
  ID_FUNC INT PRIMARY KEY AUTO_INCREMENT,
  FK_EMPRESA INT,
  NOME VARCHAR(45),
  CPF CHAR(11),
  EMAIL VARCHAR(45),
  TEL CHAR(14),
  SENHA VARCHAR(45),
  FOTO VARCHAR(200),
  STATUS_CADASTRO VARCHAR(20),
  FK_PERMISSAO INT,
  FOREIGN KEY (FK_EMPRESA) REFERENCES TB_EMPRESA(ID_EMPRESA),
  FOREIGN KEY (FK_PERMISSAO) REFERENCES TB_PERMISSAO(ID_PERMISSAO)
);

CREATE TABLE IF NOT EXISTS TB_WEB_LOG (
  ID_WEB_LOG INT PRIMARY KEY AUTO_INCREMENT,
  FK_FUNC INT,
  FK_EMPRESA INT,
  TITULO VARCHAR(45),
  DESCRICAO VARCHAR(200),
  DATA_HORA DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (FK_FUNC) REFERENCES TB_FUNCIONARIO(ID_FUNC),
  FOREIGN KEY (FK_EMPRESA) REFERENCES TB_EMPRESA(ID_EMPRESA)
);

CREATE TABLE IF NOT EXISTS TB_LOG (
  ID_LOG INT PRIMARY KEY AUTO_INCREMENT,
  FK_FUNC INT,
  FK_EMPRESA INT,
  CATEGORIA VARCHAR(45),
  DESCRICAO VARCHAR(200),
  DATA_HORA DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (FK_FUNC) REFERENCES TB_FUNCIONARIO(ID_FUNC) ON DELETE SET NULL,
  FOREIGN KEY (FK_EMPRESA) REFERENCES TB_EMPRESA(ID_EMPRESA)
);

CREATE TABLE IF NOT EXISTS TB_EVENTOS (
  ID_EVENTOS INT PRIMARY KEY AUTO_INCREMENT,
  FK_EMPRESA INT,
  NOME VARCHAR(45),
  DATA_INICIO DATE,
  DATA_TERMINO DATE,
  DESCRICAO VARCHAR(200),
  COR CHAR(7),
  FOREIGN KEY (FK_EMPRESA) REFERENCES TB_EMPRESA(ID_EMPRESA)
);

CREATE TABLE IF NOT EXISTS TB_FILTRO_DASHBOARD (
  ID_FILTRO INT PRIMARY KEY AUTO_INCREMENT,
  FK_EMPRESA INT,
  NOME VARCHAR(45),	
  DATA_CHEGADA DATE,
  FK_CONTINENTE INT,
  FK_PAIS INT,
  FK_VIA INT,
  FK_FEDERACAO_BRASIL INT,
  FOREIGN KEY (FK_EMPRESA) REFERENCES TB_EMPRESA(ID_EMPRESA)
);SELECT * FROM TB_PERMISSAO;

CREATE TABLE IF NOT EXISTS TB_NOTIFICACAO (
  ID_NOTIFICACAO INT PRIMARY KEY AUTO_INCREMENT,
  ID_CANAL_SLACK VARCHAR(11),
  FK_EMPRESA INT,
  TITULO VARCHAR(45),
  DESCRICAO VARCHAR(200),
  STATUS_NOTIFICACAO VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS TB_ETL_LOG (
  ID_ETL_LOG INT PRIMARY KEY AUTO_INCREMENT,
  TIPO_LOG VARCHAR(80),
  DESCRICAO VARCHAR(256),
  DATA_HORA DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS CONTINENTE (
    ID_CONTINENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS FEDERACAO_BRASIL (
    ID_FEDERACAO_BRASIL INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS VIA (
    ID_VIA INT PRIMARY KEY AUTO_INCREMENT,
    TIPO_VIA VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS PAIS (
    ID_PAIS INT PRIMARY KEY AUTO_INCREMENT,
    NOME_PAIS VARCHAR(45),
    FK_CONTINENTE INT,
    FOREIGN KEY (FK_CONTINENTE) REFERENCES CONTINENTE(ID_CONTINENTE)
);

CREATE TABLE IF NOT EXISTS TB_BASE_DADOS (
    ID_BASE_DADOS INT PRIMARY KEY AUTO_INCREMENT,
    DATA_CHEGADA DATE,
    CHEGADAS INT,
    FK_VIA INT,
    FK_PAIS INT,
    FK_CONTINENTE INT,
    FK_FEDERACAO_BRASIL INT,
    FOREIGN KEY (FK_VIA) REFERENCES VIA(ID_VIA),
    FOREIGN KEY (FK_PAIS) REFERENCES PAIS(ID_PAIS),
    FOREIGN KEY (FK_CONTINENTE) REFERENCES CONTINENTE(ID_CONTINENTE),
    FOREIGN KEY (FK_FEDERACAO_BRASIL) REFERENCES FEDERACAO_BRASIL(ID_FEDERACAO_BRASIL)
);

-- Covering index for the most common query patterns
CREATE INDEX idx_base_dados_covering ON TB_BASE_DADOS 
(DATA_CHEGADA, FK_CONTINENTE, FK_VIA, FK_PAIS, FK_FEDERACAO_BRASIL, CHEGADAS);

-- Additional index for year-based filtering
CREATE INDEX idx_base_dados_year ON TB_BASE_DADOS 
((YEAR(DATA_CHEGADA)), (MONTH(DATA_CHEGADA)), FK_CONTINENTE);

INSERT INTO TB_EMPRESA VALUES(default, "beyond", "0001129938-99", 123456, "beyond@gg","11946776601","Matriz", 1, "C08SPL9KM3L");

INSERT INTO TB_EMPRESA VALUES(default, "beyond_sub", "0001129938-11", 123458, "beyond@hh","11946776611","Matriz", 0, "C08T3H9B51N");

INSERT INTO TB_PERMISSAO VALUES(default, "Comum");

INSERT INTO TB_FUNCIONARIO VALUES(default, 1, "Fillipe", "47793691857", "fillipe.mendes@sptech.school", "11912341234", "123456",  null, "ativo", 1);

INSERT INTO TB_FUNCIONARIO VALUES(default, 1, "Kadu", "47793691857", "carlos.ribeiro@sptech.school", "11912341234", "123456",  null, "ativo", 1);

INSERT INTO TB_FUNCIONARIO VALUES(default, 1, "Pedro Mendonça", "23403559102", "pedro.mendonca@sptech.school", "119111028922", "678912",  null, "ativo", 1);
INSERT INTO TB_PERMISSAO VALUES(default, 'Privilegiado')
SELECT * FROM TB_BASE_DADOS  WHERE FK_VIA = 4;
SELECT * FROM TB_FUNCIONARIO WHERE ID_FUNC = 1;

SELECT * FROM TB_FUNCIONARIO;
SELECT * FROM VIA;
SELECT * FROM CONTINENTE;
SELECT nome_pais FROM PAIS order by nome_pais;
SELECT NOME_PAIS, count(nome_pais) from TB_BASE_DADOS as bd
JOIN PAIS on bd.FK_PAIS = PAIS.ID_PAIS
GROUP BY NOME_PAIS;

-- Primary optimization index for date filtering and grouping
CREATE INDEX idx_base_dados_date_composite ON TB_BASE_DADOS 
(DATA_CHEGADA, FK_CONTINENTE, FK_VIA, FK_PAIS, FK_FEDERACAO_BRASIL);



SELECT
     YEAR(bd.DATA_CHEGADA) AS ANO,
     MONTH(bd.DATA_CHEGADA) AS MES,
     c.NOME AS CONTINENTE,
     SUM(bd.CHEGADAS) AS TOTAL_CHEGADAS,
     SUM(SUM(bd.CHEGADAS)) OVER (PARTITION BY YEAR(bd.DATA_CHEGADA), MONTH(bd.DATA_CHEGADA)) AS TOTAL_MENSAL
     FROM
         TB_BASE_DADOS bd
	JOIN
         FEDERACAO_BRASIL fb ON bd.FK_FEDERACAO_BRASIL = fb.ID_FEDERACAO_BRASIL
     JOIN
         CONTINENTE c ON bd.FK_CONTINENTE = c.ID_CONTINENTE
     JOIN
         PAIS p ON bd.FK_PAIS = p.ID_PAIS
     JOIN
         VIA v ON bd.FK_VIA = v.ID_VIA
     WHERE YEAR(bd.DATA_CHEGADA) = 2024

     GROUP BY
         YEAR(bd.DATA_CHEGADA),
     MONTH(bd.DATA_CHEGADA),
         c.NOME
     ORDER BY
     ANO, MES, CONTINENTE;
     
